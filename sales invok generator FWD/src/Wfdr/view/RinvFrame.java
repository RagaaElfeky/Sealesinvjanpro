/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Wfdr.view;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTable;
import Wfdr.controller.Rinvcontroller;
import Wfdr.model.RinvoiceTableModel;
import Wfdr.model.RinvoiceHeader;
import Wfdr.model.RitemTableModel;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JTextField;


/**
 *
 * @author -
 */
public class RinvFrame extends javax.swing.JFrame {
    /**
     * Creates new form RinvFrame;
     */
    public RinvFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        InvTable = new javax.swing.JTable();
        item = new javax.swing.JScrollPane();
        ItemTable = new javax.swing.JTable();
        InvNum = new javax.swing.JLabel();
        CustomerName = new javax.swing.JLabel();
        InvoiceDate = new javax.swing.JLabel();
        InvoiceTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        creatInvoice = new javax.swing.JButton();
        Deletinvoice = new javax.swing.JButton();
        saveItem = new javax.swing.JButton();
        DeletItem = new javax.swing.JButton();
        invtotal = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        Loadfile = new javax.swing.JMenuItem();
        Savefile = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                " Inv Num", "Invoice  Date", "Customer Name", "Invoice Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(InvTable);
        if (InvTable.getColumnModel().getColumnCount() > 0) {
            InvTable.getColumnModel().getColumn(0).setHeaderValue(" Inv Num");
            InvTable.getColumnModel().getColumn(1).setHeaderValue("Invoice  Date");
            InvTable.getColumnModel().getColumn(2).setHeaderValue("Customer Name");
            InvTable.getColumnModel().getColumn(3).setHeaderValue("Invoice Total");
        }

        ItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Num", "Item Name", "Item Price", "count", "Items Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        item.setViewportView(ItemTable);
        if (ItemTable.getColumnModel().getColumnCount() > 0) {
            ItemTable.getColumnModel().getColumn(0).setHeaderValue("Item Num");
            ItemTable.getColumnModel().getColumn(1).setHeaderValue("Item Name");
            ItemTable.getColumnModel().getColumn(2).setHeaderValue("Item Price");
            ItemTable.getColumnModel().getColumn(3).setHeaderValue("count");
            ItemTable.getColumnModel().getColumn(4).setHeaderValue("Items Total");
        }

        creatInvoice.setText("Creat New Invoice");

        Deletinvoice.setText("Delet Invoice");
        Deletinvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletinvoiceActionPerformed(evt);
            }
        });

        saveItem.setText("Save Item");

        DeletItem.setText("cancel");

        jLabel1.setText("Invoice Number :");

        jLabel2.setText("Customer Name :");

        jLabel3.setText("Invoice Date :");

        jLabel4.setText("Invoice Total :");

        file.setText("File");

        Loadfile.setText("Load File");
        file.add(Loadfile);

        Savefile.setText("Save File");
        Savefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavefileActionPerformed(evt);
            }
        });
        file.add(Savefile);

        jMenuBar1.add(file);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(creatInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Deletinvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(saveItem)
                                .addGap(103, 103, 103)
                                .addComponent(DeletItem))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(invtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CustomerName))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(InvNum)
                                            .addGap(154, 154, 154))
                                        .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(InvoiceDate))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(InvoiceTotal)))))))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InvNum, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustomerName)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(InvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvoiceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invtotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creatInvoice)
                    .addComponent(Deletinvoice)
                    .addComponent(saveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeletItem))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
    private void DeletinvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletinvoiceActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_DeletinvoiceActionPerformed

    private void SavefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavefileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SavefileActionPerformed
**/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RinvFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RinvFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RinvFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RinvFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
         java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                RinvFrame f1 = new RinvFrame();
             f1.controller.loadFile("RinvoiceHeader.csv","RitemLine.csv");
             f1.setVisible(true);
            }
        });
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CustomerName;
    private javax.swing.JButton DeletItem;
    private javax.swing.JButton Deletinvoice;
    private javax.swing.JLabel InvNum;
    private javax.swing.JTable InvTable;
    private javax.swing.JLabel InvoiceDate;
    private javax.swing.JLabel InvoiceTotal;
    private javax.swing.JTable ItemTable;
    private javax.swing.JMenuItem Loadfile;
    private javax.swing.JMenuItem Savefile;
    private javax.swing.JButton creatInvoice;
    private javax.swing.JMenu file;
    private javax.swing.JLabel invtotal;
    private javax.swing.JScrollPane item;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveItem;
    // End of variables declaration//GEN-END:variables
  private Rinvcontroller controller = new Rinvcontroller(this);
  public static SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
   private ArrayList<RinvoiceHeader> invoices;
    private RinvoiceTableModel rinvoiceTableModel;
    private RitemTableModel ritemTableModel;

    public RinvoiceTableModel getRinvoiceTableModel() {
        return rinvoiceTableModel;
    }
     public void setRinvoiceTableModel(RinvoiceTableModel rinvoiceTableModel) {
        this.rinvoiceTableModel = rinvoiceTableModel;
        getInvTable().setModel(rinvoiceTableModel);
    }
      public RitemTableModel getRitemTableModel() {
        return ritemTableModel;
    }
 public void setRitemTableModel(RitemTableModel ritemTableModel) {
        this.ritemTableModel = ritemTableModel;
        getItemTable().setModel(ritemTableModel);
    }
    public JTable getInvTable() {
        return InvTable;
    }

    public JTable getItemTable() {
        return ItemTable;
    }
    

    

    public Rinvcontroller getController() {
        return controller;
    }

    public ArrayList<RinvoiceHeader> getInvoices() {
         if (invoices == null) {
            invoices = new ArrayList<>();
        return invoices;
    }

    public JLabel getInvNum() {
        return InvNum;
    }

   
         

   

    public JLabel getInvoiceDate() {
        return InvoiceDate;
    }

    public JLabel getInvoiceTotal() {
        return InvoiceTotal;
    }

    public JButton getSaveNewItem() {
        return saveItem;
    }
    

  
  
    public JLabel getInvtotal() {
        return invtotal;
    }

   

    public JLabel getCustomerName() {
        return CustomerName;
    }

    public RinvoiceHeader getInvoiceByNum(int num) {
        for (RinvoiceHeader inv : getInvoices()) {
            if (inv.getInvNum() == num) return inv; //To change body of generated methods, choose Tools | Templates.
    }

   
     public int getNextInvNum() {
        int num = 0;
        for (RinvoiceHeader inv : getInvoices()) {
            if (inv.getInvNum() > num) num = inv.getInvNum();
        }
        return num + 1;

    }
    
    
    
    
    
}


